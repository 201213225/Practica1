/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication5;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

/**
 *
 * @author Denis
 */
public class Area_Juego extends javax.swing.JFrame implements Runnable {

    Nodo_Jugador aux = JavaApplication5.jugadores.raiz;
    Nodo_Jugador auxP;
    Nodo_Jugador auxZ;
    L_Cola L_plantas = JavaApplication5.ColaPlanta;
    L_Pila L_zombi = JavaApplication5.PilaZombi;
    L_Objeto Plantas = JavaApplication5.Plantas;
    L_Objeto Zombi = JavaApplication5.Zombi;
    //int noZ;
    //int noP;
    JLabel listaZombis[];//= new JLabel[];
    JLabel listaPlantas[];
    /**
     * Creates new form Area_Juego
     */
    //Hilo a=new Hilo();
    Thread a = new Thread(this);

    public Area_Juego() {

        //*/
        if (aux.tipo.equals("Zombis")) {
            auxZ = aux;
            listaZombis = new JLabel[auxZ.cantidad];
            auxP = aux.siguiente;
            listaPlantas = new JLabel[auxP.cantidad];
        } else {
            auxP = aux;
            listaPlantas = new JLabel[auxP.cantidad];
            auxZ = aux.siguiente;
            listaZombis = new JLabel[auxZ.cantidad];
        }//*/

        
        initComponents();//*
        Cinco_Iniciales();
        
        a.start();
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {

                JavaApplication5.prueba.setVisible(true);

                //this.dispose();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelPlantas = new javax.swing.JPanel();
        PanelZombi = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout PanelPlantasLayout = new javax.swing.GroupLayout(PanelPlantas);
        PanelPlantas.setLayout(PanelPlantasLayout);
        PanelPlantasLayout.setHorizontalGroup(
            PanelPlantasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 137, Short.MAX_VALUE)
        );
        PanelPlantasLayout.setVerticalGroup(
            PanelPlantasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PanelZombiLayout = new javax.swing.GroupLayout(PanelZombi);
        PanelZombi.setLayout(PanelZombiLayout);
        PanelZombiLayout.setHorizontalGroup(
            PanelZombiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 137, Short.MAX_VALUE)
        );
        PanelZombiLayout.setVerticalGroup(
            PanelZombiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 618, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 531, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelPlantas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelZombi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelPlantas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelZombi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelPlantas;
    private javax.swing.JPanel PanelZombi;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        Thread ct = Thread.currentThread();
        //int i = 0;
        while (ct == a) {
            try {
                Thread.sleep(5000);

            } catch (InterruptedException ex) {
                Logger.getLogger(Area_Juego.class.getName()).log(Level.SEVERE, null, ex);
            }
            PanelPlantas.removeAll();
            PanelZombi.removeAll();
            L_plantas.incertar(Plantas.buscarRandom());
            L_zombi.incertar(Zombi.buscarRandom());

            listaPlantas = L_plantas.crearimagenes(auxP.cantidad);
            listaZombis = L_zombi.crearimagenes(auxZ.cantidad);
            //JLabel vectorP[]= new JLabel[auxP.cantidad];
            //JLabel vectorZ[]= new JLabel[auxZ.cantidad];
            for (int i = 0; i < listaPlantas.length&& listaPlantas[i]!=null; i++) {
                listaPlantas[i].setBounds(0, i * 100, 80, 80);
                PanelPlantas.add(listaPlantas[i], null);
            }
            for (int i = 0; i < listaZombis.length&&listaZombis[i]!=null; i++) {
                listaZombis[i].setBounds(0, i * 100, 80, 80);
                PanelZombi.add(listaZombis[i], null);
            }
            this.repaint();
            //System.out.println(i);
            //i++;
        }
    }

    private void Cinco_Iniciales() {
        L_zombi.incertar(Zombi.buscarRandom());
        L_zombi.incertar(Zombi.buscarRandom());
        L_zombi.incertar(Zombi.buscarRandom());
        L_zombi.incertar(Zombi.buscarRandom());
        L_zombi.incertar(Zombi.buscarRandom());
        L_plantas.incertar(Plantas.buscarRandom());
        L_plantas.incertar(Plantas.buscarRandom());
        L_plantas.incertar(Plantas.buscarRandom());
        L_plantas.incertar(Plantas.buscarRandom());
        L_plantas.incertar(Plantas.buscarRandom());//*/

        listaPlantas = L_plantas.crearimagenes(auxP.cantidad);
        listaZombis = L_zombi.crearimagenes(auxZ.cantidad);
            //JLabel vectorP[]= new JLabel[auxP.cantidad];
        //JLabel vectorZ[]= new JLabel[auxZ.cantidad];
        for (int i = 0; i < listaPlantas.length && listaPlantas[i]!=null; i++) {
            System.out.println(i);
            listaPlantas[i].setBounds(0, i * 100, 80, 80);
            this.PanelPlantas.add(listaPlantas[i], null);
            
        }
        for (int i = 0; i < listaZombis.length &&listaZombis[i]!=null; i++) {
            listaZombis[i].setBounds(0, i * 100, 80, 80);
            this.PanelZombi.add(listaZombis[i], null);
            
        }//*/
        this.repaint();
    }
}
